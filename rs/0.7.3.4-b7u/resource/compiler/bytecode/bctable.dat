((197 (tl-ref/bound i) (#(i i <uint-8>)) 1) (196 (tl-ref/bound (i <uint-16>)) (#(i i <uint-16>)) 2) (195 (tl-ref/bound 9) () 0) (194 (tl-ref/bound 8) () 0) (193 (tl-ref/bound 7) () 0) (192 (tl-ref/bound 6) () 0) (191 (tl-ref/bound 5) () 0) (190 (tl-ref/bound 4) () 0) (189 (tl-ref/bound 3) () 0) (188 (tl-ref/bound 2) () 0) (187 (tl-ref/bound 1) () 0) (186 (tl-ref/bound 0) () 0) (185 (applyg n) (#(n n <uint-8>)) 1) (184 (applyg 3) () 0) (183 (applyg 2) () 0) (182 (applyg 1) () 0) (181 (applyf n) (#(n n <uint-8>)) 1) (180 (applyf 4) () 0) (179 (applyf 3) () 0) (178 (applyf 2) () 0) (177 (applyf 1) () 0) (176 (applyf 0) () 0) (175 (gvec-store (ix index)) (#(ix index <uint-8>)) 1) (174 (gvec-load (ix index)) (#(ix index <uint-8>)) 1) (173 (use-empty-envt) () 0) (172 (use-function-envt) () 0) (171 (this-function) () 0) (170 (raw-bool #f) () 0) (169 (raw-bool #t) () 0) (168 (fixnum/INT_32 n) (#(n n <int-32>)) 4) (167 (fixnum/INT_16 n) (#(n n <int-16>)) 2) (166 (fixnum/-UINT_8 n) (#(n (+ n 256) <uint-8>)) 1) (165 (fixnum/UINT_8 n) (#(n n <uint-8>)) 1) (164 (fixnum 1) () 0) (163 (fixnum 0) () 0) (162 (raw-int/INT_32 n) (#(n n <int-32>)) 4) (161 (raw-int/INT_16 n) (#(n n <int-16>)) 2) (160 (raw-int/-UINT_8 n) (#(n (+ n 256) <uint-8>)) 1) (159 (raw-int/UINT_8 n) (#(n n <uint-8>)) 1) (158 (raw-int 1) () 0) (157 (raw-int 0) () 0) (156 (bind n) (#(n n <uint-8>)) 1) (155 (bind 5) () 0) (154 (bind 4) () 0) (153 (bind 3) () 0) (152 (bind 2) () 0) (151 (bind 1) () 0) (150 (bind-first-regs n) (#(n n <uint-8>)) 1) (149 (bind-first-regs 5) () 0) (148 (bind-first-regs 4) () 0) (147 (bind-first-regs 3) () 0) (146 (bind-first-regs 2) () 0) (145 (bind-first-regs 1) () 0) (144 (unbind) () 0) (143 (collect> n) (#(n n <uint-8>)) 1) (142 (collect> 3) () 0) (141 (collect> 2) () 0) (140 (collect> 1) () 0) (139 (collect> 0) () 0) (138 (set-false< n) (#(n n <uint-8>)) 1) (137 (set-false< 2) () 0) (136 (set-false< 1) () 0) (135 (check>= n) (#(n n <uint-8>)) 1) (134 (check= n) (#(n n <uint-8>)) 1) (133 (check= 4) () 0) (132 (check= 3) () 0) (131 (check= 2) () 0) (130 (check= 1) () 0) (129 (check= 0) () 0) (128 (branch-if-false label) (#(label (ref-label l) <uint-16>)) 2) (127 (bjump n label) (#(n n <uint-8>) #(label (ref-label l) <uint-16>)) 3) (126 (jump label) (#(label (ref-label l) <uint-16>)) 2) (125 (restore (num n)) (#(num n <uint-8>)) 1) (124 (restore (num n <uint-16>)) (#(num n <uint-16>)) 2) (123 (restore 5) () 0) (122 (restore 4) () 0) (121 (restore 3) () 0) (120 (restore 2) () 0) (119 (restore 1) () 0) (118 (restore 0) () 0) (117 (save num label) (#(num n <uint-8>) #(label (ref-label l) <uint-16>)) 3) (116 (save num label) (#(num n <uint-16>) #(label (ref-label l) <uint-16>)) 4) (115 (save 5 label) (#(label (ref-label l) <uint-16>)) 2) (114 (save 4 label) (#(label (ref-label l) <uint-16>)) 2) (113 (save 3 label) (#(label (ref-label l) <uint-16>)) 2) (112 (save 2 label) (#(label (ref-label l) <uint-16>)) 2) (111 (save 1 label) (#(label (ref-label l) <uint-16>)) 2) (110 (save 0 label) (#(label (ref-label l) <uint-16>)) 2) (109 (cdr) () 0) (108 (car) () 0) (107 (cons) () 0) (106 (make n) (#(n (- num-args 1) <uint-8>)) 1) (105 (immob/bits hi lo) (#(hi (obj-high-bits x) <uint-16>) #(lo (obj-low-bits x) <uint-16>)) 4) (104 (immob/unique v) (#(v (get-immob-value x) <uint-8>)) 1) (103 (immob/unicode v) (#(v (unicode-char->integer x) <uint-16>)) 2) (102 (immob/char v) (#(v (ascii-char->integer x) <uint-8>)) 1) (101 (immob ()) () 0) (100 (immob #f) () 0) (99 (immob #t) () 0) (98 (tl-set i) (#(i i <uint-8>)) 1) (97 (tl-set (i i <uint-16>)) (#(i i <uint-16>)) 2) (96 (tl-ref i) (#(i i <uint-8>)) 1) (95 (tl-ref (i i <uint-16>)) (#(i i <uint-16>)) 2) (94 (lex-set frame slot) (#(frame frame <uint-8>) #(slot slot <uint-8>)) 2) (93 (lex-set 2 slot) (#(slot slot <uint-8>)) 1) (92 (lex-set 2 2) () 0) (91 (lex-set 2 1) () 0) (90 (lex-set 2 0) () 0) (89 (lex-set 1 slot) (#(slot slot <uint-8>)) 1) (88 (lex-set 1 2) () 0) (87 (lex-set 1 1) () 0) (86 (lex-set 1 0) () 0) (85 (lex-set 0 slot) (#(slot slot <uint-8>)) 1) (84 (lex-set 0 2) () 0) (83 (lex-set 0 1) () 0) (82 (lex-set 0 0) () 0) (81 (lex-ref frame slot) (#(frame frame <uint-8>) #(slot slot <uint-8>)) 2) (80 (lex-ref 2 slot) (#(slot slot <uint-8>)) 1) (79 (lex-ref 2 2) () 0) (78 (lex-ref 2 1) () 0) (77 (lex-ref 2 0) () 0) (76 (lex-ref 1 slot) (#(slot slot <uint-8>)) 1) (75 (lex-ref 1 2) () 0) (74 (lex-ref 1 1) () 0) (73 (lex-ref 1 0) () 0) (72 (lex-ref 0 slot) (#(slot slot <uint-8>)) 1) (71 (lex-ref 0 2) () 0) (70 (lex-ref 0 1) () 0) (69 (lex-ref 0 0) () 0) (68 (pop) () 0) (67 (reg-xfer (from from <uint-16>) (to to <uint-16>)) (#(from from <uint-16>) #(to to <uint-16>)) 4) (66 (reg-xfer (from from <uint-16>) to) (#(from from <uint-16>) #(to to <uint-8>)) 3) (65 (reg-xfer (from from <uint-16>) to) (#(from from <uint-16>) #(to to <uint-8>)) 3) (64 (reg-xfer from (to to <uint-16>)) (#(from from <uint-8>) #(to to <uint-16>)) 3) (63 (reg-xfer from to) (#(from from <uint-8>) #(to to <uint-8>)) 2) (62 (reg-xfer from to) (#(from from <uint-8>) #(to to <uint-8>)) 2) (61 (reg-xfer from (to to <uint-16>)) (#(from from <uint-8>) #(to to <uint-16>)) 3) (60 (reg-xfer from to) (#(from from <uint-8>) #(to to <uint-8>)) 2) (59 (reg-xfer from to) (#(from from <uint-8>) #(to to <uint-8>)) 2) (58 (reg-xfer from 3) (#(from from <uint-8>)) 1) (57 (reg-xfer from 3) (#(from from <uint-8>)) 1) (56 (reg-xfer from 2) (#(from from <uint-8>)) 1) (55 (reg-xfer from 2) (#(from from <uint-8>)) 1) (54 (reg-xfer from 1) (#(from from <uint-8>)) 1) (53 (reg-xfer from 1) (#(from from <uint-8>)) 1) (52 (reg-xfer from 0) (#(from from <uint-8>)) 1) (51 (reg-xfer from 0) (#(from from <uint-8>)) 1) (50 (reg-xfer 3 to) (#(to to <uint-8>)) 1) (49 (reg-xfer 3 to) (#(to to <uint-8>)) 1) (48 (reg-xfer 3 2) () 0) (47 (reg-xfer 3 1) () 0) (46 (reg-xfer 3 0) () 0) (45 (reg-xfer 2 to) (#(to to <uint-8>)) 1) (44 (reg-xfer 2 to) (#(to to <uint-8>)) 1) (43 (reg-xfer 2 3) () 0) (42 (reg-xfer 2 1) () 0) (41 (reg-xfer 2 0) () 0) (40 (reg-xfer 1 to) (#(to to <uint-8>)) 1) (39 (reg-xfer 1 to) (#(to to <uint-8>)) 1) (38 (reg-xfer 1 3) () 0) (37 (reg-xfer 1 2) () 0) (36 (reg-xfer 1 0) () 0) (35 (reg-xfer 0 to) (#(to to <uint-8>)) 1) (34 (reg-xfer 0 to) (#(to to <uint-8>)) 1) (33 (reg-xfer 0 3) () 0) (32 (reg-xfer 0 2) () 0) (31 (reg-xfer 0 1) () 0) (30 (reg-ref n) (#(n n <uint-8>)) 1) (29 (reg-ref (n n <uint-16>)) (#(n n <uint-16>)) 2) (28 (reg-ref n) (#(n n <uint-8>)) 1) (27 (reg-ref 2) () 0) (26 (reg-ref 1) () 0) (25 (reg-ref 0) () 0) (24 (reg-set n) (#(n n <uint-8>)) 1) (23 (reg-set (n n <uint-16>)) (#(n n <uint-16>)) 2) (22 (reg-set n) (#(n n <uint-8>)) 1) (21 (reg-set 2) () 0) (20 (reg-set 1) () 0) (19 (reg-set 0) () 0) (18 (apply n) (#(n n <uint-8>)) 1) (17 (apply 4) () 0) (16 (apply 3) () 0) (15 (apply 2) () 0) (14 (apply 1) () 0) (13 (apply 0) () 0) (12 (closure slot) (#(slot slot <uint-8>)) 1) (11 (closure (slot slot <uint-16>)) (#(slot slot <uint-16>)) 2) (10 (literal slot) (#(slot slot <uint-8>)) 1) (9 (literal (slot slot <uint-16>)) (#(slot slot <uint-16>)) 2) (8 (literal 5) () 0) (7 (literal 4) () 0) (6 (literal 3) () 0) (5 (literal 2) () 0) (4 (literal 1) () 0) (3 (literal 0) () 0) (2 (return n) (#(n n <uint-8>)) 1) (1 (return 1) () 0) (0 (return 0) () 0))