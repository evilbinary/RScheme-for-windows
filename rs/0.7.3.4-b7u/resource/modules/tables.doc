(tables (mathlib corelib objsys low-scheme *scheme* primops precore) (set-bucket-overflow! set-bucket-class! table-replace! generic-hash-table-lookup <symbol-table> bucket-key make-string-table set-table-equal-function! set-directory-bits! table-for-each generic-hash-table-probe? hash-table-clear! <hash-table> get-system-symbol-table char->hash set-directory! bucket-class table-lookup table-key-present? set-table-hash-function! <integer-table> table-stats table-hash-function <table> table-insert! <eq-table> make-table bucket-bits table-equal-function directory table-size make-object-table chain-length bucket-hash <hash-integer-table> set-bucket-bits! table-remove! $bucket-size directory-bits set-table-size! <string-table> bucket-for-each key-sequence value-sequence bucket-count <table-bucket> bucket-overflow <string-ci-table> <generic-table> hash-table-copy <object-table> generic-hash-table-insert! generic-hash-table-remove! make-string-ci-table make-fixnum-table table-join make-symbol-table table? gvec-hash bucket-value) (("modules/tables/classes.scm" class <table-bucket> ()) ("modules/tables/classes.scm" class <table> ()) ("modules/tables/classes.scm" class <hash-table> ()) ("modules/tables/misc.scm" method key-sequence ()) ("modules/tables/misc.scm" method value-sequence ()) ("modules/tables/misc.scm" function table-replace! ()) ("modules/tables/eqtable.scm" class <eq-table> ()) ("modules/tables/eqtable.scm" method table-key-present? ()) ("modules/tables/eqtable.scm" method table-lookup ()) ("modules/tables/eqtable.scm" method table-remove! ()) ("modules/tables/eqtable.scm" method table-insert! ()) ("modules/tables/eqtable.scm" method table-equal-function ()) ("modules/tables/eqtable.scm" class <integer-table> ()) ("modules/tables/eqtable.scm" method table-key-present? ()) ("modules/tables/eqtable.scm" method table-lookup ()) ("modules/tables/eqtable.scm" method table-remove! ()) ("modules/tables/eqtable.scm" method table-insert! ()) ("modules/tables/eqtable.scm" method table-equal-function ()) ("modules/tables/eqtable.scm" method table-hash-function ()) ("modules/tables/eqtable.scm" class <hash-integer-table> ()) ("modules/tables/eqtable.scm" method table-key-present? ()) ("modules/tables/eqtable.scm" method table-lookup ()) ("modules/tables/eqtable.scm" method table-remove! ()) ("modules/tables/eqtable.scm" method table-insert! ()) ("modules/tables/eqtable.scm" method table-equal-function ()) ("modules/tables/eqtable.scm" method table-hash-function ()) ("modules/tables/objtable.scm" class <object-table> ()) ("modules/tables/objtable.scm" method table-key-present? ()) ("modules/tables/objtable.scm" method table-lookup ()) ("modules/tables/objtable.scm" method table-remove! ()) ("modules/tables/objtable.scm" method table-insert! ()) ("modules/tables/objtable.scm" method table-hash-function ()) ("modules/tables/objtable.scm" method table-equal-function ()) ("modules/tables/objtable.scm" function make-object-table ()) ("modules/tables/strcitable.scm" class <string-ci-table> ()) ("modules/tables/strcitable.scm" method table-key-present? ()) ("modules/tables/strcitable.scm" method table-lookup ()) ("modules/tables/strcitable.scm" method table-remove! ()) ("modules/tables/strcitable.scm" method table-insert! ()) ("modules/tables/strcitable.scm" method table-hash-function ()) ("modules/tables/strcitable.scm" method table-equal-function ()) ("modules/tables/strcitable.scm" function get-system-symbol-table ()) ("modules/tables/strtable.scm" class <string-table> ()) ("modules/tables/strtable.scm" method table-key-present? ()) ("modules/tables/strtable.scm" method table-lookup ()) ("modules/tables/strtable.scm" method table-remove! ()) ("modules/tables/strtable.scm" method table-insert! ()) ("modules/tables/strtable.scm" method table-hash-function ()) ("modules/tables/strtable.scm" method table-equal-function ()) ("modules/tables/symtable.scm" class <symbol-table> ()) ("modules/tables/symtable.scm" method table-key-present? ()) ("modules/tables/symtable.scm" method table-lookup ()) ("modules/tables/symtable.scm" method table-remove! ()) ("modules/tables/symtable.scm" method table-insert! ()) ("modules/tables/symtable.scm" method table-hash-function ()) ("modules/tables/symtable.scm" method table-equal-function ()) ("modules/tables/genhooks.scm" variable generic-hash-table-lookup ()) ("modules/tables/genhooks.scm" variable generic-hash-table-remove! ()) ("modules/tables/genhooks.scm" variable generic-hash-table-insert! ()) ("modules/tables/genhooks.scm" variable generic-hash-table-probe? ()) ("modules/tables/gentable.scm" class <generic-table> ()) ("modules/tables/gentable.scm" method table-key-present? ()) ("modules/tables/gentable.scm" method table-lookup ()) ("modules/tables/gentable.scm" method table-remove! ()) ("modules/tables/gentable.scm" method table-insert! ()) ("modules/tables/make.scm" method initialize ()) ("modules/tables/make.scm" function make-table ()) ("modules/tables/make.scm" function make-symbol-table ()) ("modules/tables/make.scm" function make-string-table ()) ("modules/tables/make.scm" function make-string-ci-table ()) ("modules/tables/make.scm" function make-fixnum-table ()) ("modules/tables/make.scm" function table? ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" method hash-code ()) ("modules/tables/make.scm" function gvec-hash ()) ("modules/tables/make.scm" function char->hash ()) ("modules/tables/tablemap.scm" syntax $bucket-size ()) ("modules/tables/tablemap.scm" syntax bucket-hash ()) ("modules/tables/tablemap.scm" syntax bucket-key ()) ("modules/tables/tablemap.scm" syntax bucket-value ()) ("modules/tables/tablemap.scm" function bucket-for-each ()) ("modules/tables/tablemap.scm" function bucket-count ()) ("modules/tables/tablemap.scm" method table-for-each ()) ("modules/tables/tablemap.scm" function chain-length ()) ("modules/tables/tablemap.scm" function table-stats ()) ("modules/tables/join.scm" function table-join ())))