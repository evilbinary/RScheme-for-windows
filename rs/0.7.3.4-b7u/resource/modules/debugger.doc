(debugger (hacks regex repl sort corelib start mlink paths editinp codegen compiler high-scheme tables mathlib objsys low-scheme iolib *scheme* primops precore) (breakpoint-on debug post-mortem delete-breakpoint) (("modules/debugger/breakpt.scm" class <breakpoint> ()) ("modules/debugger/breakpt.scm" class <tracepoint> ()) ("modules/debugger/breakpt.scm" method installed? ()) ("modules/debugger/breakpt.scm" method install-breakpoint ()) ("modules/debugger/breakpt.scm" method deinstall-breakpoint ()) ("modules/debugger/breakpt.scm" method write-object ()) ("modules/debugger/breakpt.scm" variable *breakpoint-counter* ()) ("modules/debugger/breakpt.scm" variable *all-breakpoints* ()) ("modules/debugger/breakpt.scm" function search-for-breakpoint ()) ("modules/debugger/breakpt.scm" function get-breakpoint-by-fn ()) ("modules/debugger/breakpt.scm" function get-breakpoint-by-id ()) ("modules/debugger/breakpt.scm" function breakpoint-on ()) ("modules/debugger/breakpt.scm" function lookup-proc ()) ("modules/debugger/breakpt.scm" function get-breakpoint ()) ("modules/debugger/breakpt.scm" function make-breakpoint ()) ("modules/debugger/breakpt.scm" method delete-breakpoint ()) ("modules/debugger/breakpt.scm" function mk-standalone ()) ("modules/debugger/breakpt.scm" function notify-break ()) ("modules/debugger/breakpt.scm" function make-continue-cmd-proc ()) ("modules/debugger/breakpt.scm" function make-return-cmd-proc ()) ("modules/debugger/breakpt.scm" method gen-wrapper-template ()) ("modules/debugger/breakpt.scm" method gen-wrapper-template ()) ("modules/debugger/breakpt.scm" function trace-return-values ()) ("modules/debugger/breakpt.scm" function cmd-proc/no-break ()) ("modules/debugger/breakpt.scm" function cmd-proc/trace ()) ("modules/debugger/breakpt.scm" function cmd-proc/break ()) ("modules/debugger/breakpt.scm" function cmd-proc/breaks ()) ("modules/debugger/breakpt.scm" function install-one-brkpt ()) ("modules/debugger/breakpt.scm" function brkpt-install ()) ("modules/debugger/breakpt.scm" function print-breakpoint ()) ("modules/debugger/slice.scm" class <slice> ()) ("modules/debugger/slice.scm" function slice? ()) ("modules/debugger/slice.scm" method self-evaluating? ()) ("modules/debugger/slice.scm" method write-object ()) ("modules/debugger/contns.scm" class <debug-state> ()) ("modules/debugger/contns.scm" function continuation-chain ()) ("modules/debugger/contns.scm" function capture-state ()) ("modules/debugger/frames.scm" class <frame> ()) ("modules/debugger/frames.scm" class <continuation-frame> ()) ("modules/debugger/frames.scm" class <apply-frame> ()) ("modules/debugger/frames.scm" class <fluid-contour-frame> ()) ("modules/debugger/frames.scm" function build-frames ()) ("modules/debugger/frames.scm" method push-a-frame ()) ("modules/debugger/frames.scm" method push-a-frame ()) ("modules/debugger/frames.scm" method push-a-frame ()) ("modules/debugger/frames.scm" function push-c-frame ()) ("modules/debugger/frames.scm" function frames ()) ("modules/debugger/frames.scm" function vm-state->frame-list ()) ("modules/debugger/frames.scm" function frames* ()) ("modules/debugger/frames.scm" function condition-frames* ()) ("modules/debugger/frames.scm" method print-1-frame ()) ("modules/debugger/frames.scm" method print-1-frame ()) ("modules/debugger/frames.scm" method print-1-frame ()) ("modules/debugger/debug.scm" class <debug-cmd-loop> ()) ("modules/debugger/debug.scm" function get-frame ()) ("modules/debugger/debug.scm" function debug ()) ("modules/debugger/debug.scm" method post-mortem ()) ("modules/debugger/debug.scm" method post-mortem ()) ("modules/debugger/debug.scm" function debug* ()) ("modules/debugger/debug.scm" variable $fin-w-call-pc ()) ("modules/debugger/debug.scm" function do-debug ()) ("modules/debugger/debug.scm" function replace-reg-ref ()) ("modules/debugger/debug.scm" function disassembled-listing ()) ("modules/debugger/debug.scm" method get-reg-value ()) ("modules/debugger/debug.scm" method get-lexvar-value ()) ("modules/debugger/debug.scm" method show-listing ()) ("modules/debugger/debug.scm" method show-listing ()) ("modules/debugger/adapter.scm" class <debugpoint> ()) ("modules/debugger/adapter.scm" method gen-wrapper-template ()) ("modules/debugger/adapter.scm" variable *first* ()) ("modules/debugger/adapter.scm" function initial-help ()) ("modules/debugger/adapter.scm" function cmd-proc/debug ())))