(imageio (sort corelib tables mathlib objsys low-scheme iolib *scheme* primops precore) (<code-ptr-anchor> uncompress pickle gen-for-module fn-descr gen-code-ptr-refs *empty-dict* unpickle part-number make-class-refs function-number code-ptrs *standard-symbol-dict* <fn-descr-anchor> pickle/ref <image-schema> set-monotone-number! set-part-number! set-ref-proc! compress derender-unmarshalling ref-proc monotone-number string-copy-rec! check-image-version object->image make-code-ptr-refs indexq get-fn-descr-anchor pickle* image->string gen-semi-compact-part pickle/gvec set-class-dict! other-refs-are-invalid set-id->symbol-vector! compact-buffers parse-refs pickler pickle/bvec render-marshalling make-symbol-refs set-class-table! set-link-in?! link-in? compact-code-ptrs-in-part string-length-rec string-append-rec pickle->compressed-string debug set-module-name! symbol-dict image->compressed-string decompress split-on-dict $standard-scheme-class-names class-name-table class-table pickle/template set-code-ptrs! class-dict *default-image-schema* object->image* symbol-dict-id-table missed-classes str-literal id->symbol-vector get-code-ptr-anchor pickle->string gen-symbol-list exactly-entry? add-class-anchors-to-schema! image->object* make-other-refs gen-non-compact-part set-symbol-dict! number->binary-4 image->object *standard-class-dict* assign-ids symbol->id-table optimize-refs set-fn-descr! <symbol-dict> <anchor> number->binary-1 module-name set-symbol->id-table! *anchor-table* $nul default-image-schema $common-symbols number->binary-2 file->datum make-default-image-schema set-function-number!) (("modules/imageio/refanchor.scm" class <anchor> ()) ("modules/imageio/refanchor.scm" class <fn-descr-anchor> ()) ("modules/imageio/refanchor.scm" class <code-ptr-anchor> ()) ("modules/imageio/refanchor.scm" method write-object ()) ("modules/imageio/refanchor.scm" method write-object ()) ("modules/imageio/refanchor.scm" class <symbol-dict> ()) ("modules/imageio/refanchor.scm" function symbol-dict-id-table ()) ("modules/imageio/refanchor.scm" variable *empty-dict* ()) ("modules/imageio/refanchor.scm" variable *standard-symbol-dict* ()) ("modules/imageio/refanchor.scm" variable *standard-class-dict* ()) ("modules/imageio/glue.scm" function missed-classes ()) ("modules/imageio/marshall.scm" function assign-ids ()) ("modules/imageio/marshall.scm" function image->string ()) ("modules/imageio/marshall.scm" function image->compressed-string ()) ("modules/imageio/marshall.scm" function decompress ()) ("modules/imageio/marshall.scm" variable *anchor-table* ()) ("modules/imageio/marshall.scm" function pickle ()) ("modules/imageio/marshall.scm" function pickle* ()) ("modules/imageio/marshall.scm" function pickle/ref ()) ("modules/imageio/marshall.scm" function pickle/gvec ()) ("modules/imageio/marshall.scm" function pickle/template ()) ("modules/imageio/marshall.scm" function pickle/bvec ()) ("modules/imageio/marshall.scm" function pickler ()) ("modules/imageio/marshall.scm" function file->datum ()) ("modules/imageio/marshall.scm" function pickle->compressed-string ()) ("modules/imageio/marshall.scm" function pickle->string ()) ("modules/imageio/marshall.scm" function unpickle ()) ("modules/imageio/refsmgr.scm" syntax debug ()) ("modules/imageio/refsmgr.scm" function string-length-rec ()) ("modules/imageio/refsmgr.scm" function string-copy-rec! ()) ("modules/imageio/refsmgr.scm" function string-append-rec ()) ("modules/imageio/refsmgr.scm" function optimize-refs ()) ("modules/imageio/refsmgr.scm" function make-other-refs ()) ("modules/imageio/refsmgr.scm" function make-code-ptr-refs ()) ("modules/imageio/refsmgr.scm" function gen-code-ptr-refs ()) ("modules/imageio/refsmgr.scm" function gen-for-module ()) ("modules/imageio/refsmgr.scm" function compact-code-ptrs-in-part ()) ("modules/imageio/refsmgr.scm" function exactly-entry? ()) ("modules/imageio/refsmgr.scm" function gen-semi-compact-part ()) ("modules/imageio/refsmgr.scm" function gen-non-compact-part ()) ("modules/imageio/refsmgr.scm" function number->binary-4 ()) ("modules/imageio/refsmgr.scm" function number->binary-2 ()) ("modules/imageio/refsmgr.scm" function number->binary-1 ()) ("modules/imageio/refsmgr.scm" function str-literal ()) ("modules/imageio/refsmgr.scm" function gen-symbol-list ()) ("modules/imageio/refsmgr.scm" function make-symbol-refs ()) ("modules/imageio/refsmgr.scm" function make-class-refs ()) ("modules/imageio/refsmgr.scm" function split-on-dict ()) ("modules/imageio/schema.scm" class <image-schema> ()) ("modules/imageio/schema.scm" variable *default-image-schema* ()) ("modules/imageio/schema.scm" function default-image-schema ()) ("modules/imageio/schema.scm" function other-refs-are-invalid ()) ("modules/imageio/schema.scm" function make-default-image-schema ()) ("modules/imageio/schema.scm" variable $standard-scheme-class-names ()) ("modules/imageio/schema.scm" variable $common-symbols ()) ("modules/imageio/schema.scm" function add-class-anchors-to-schema! ()) ("modules/imageio/schema.scm" function class-name-table ()) ("modules/imageio/user.scm" function object->image* ()) ("modules/imageio/user.scm" function check-image-version ()) ("modules/imageio/user.scm" function image->object* ()) ("modules/imageio/user.scm" function object->image ()) ("modules/imageio/user.scm" function image->object ()) ("modules/imageio/codeanch.scm" function get-fn-descr-anchor ()) ("modules/imageio/codeanch.scm" function get-code-ptr-anchor ()) ("modules/imageio/codeanch.scm" function indexq ())))