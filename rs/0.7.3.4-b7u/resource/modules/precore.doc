(precore (*scheme* primops) (<os-error> im set-limb-cap! corresponding-primtype write-object <boolean> arg-types dirty? set-bindings! set-element! set-function-specializers! code-pointer <simple-warning> set-basis! set-dirty?! set-gf-cache-3-v! finalize <real> rest-type input-port define-inline all-slots <template> set-table! set-type-check-required-type! result-type set-place! <float> set-rewriter-dyn-envt! dynamic-enclosing argument-error-bad-arg <abstract-string> place <mp-rational> set-write-prot! <substring> set-enclosing! set-im! <byte-vector> length set-else-bdg! set-error-number! element gf-cache-3-k <dequeue> error-number <mp-data> properties size <pair> mp-data instance-size set-setter-forms! <rewriter> set-all-slots! <single-dispatch-gf> set-re! <integer> name <serious-condition> args <place> set-class-name! <primop> set-state! back <winding-contour> <symbol> ftlc-saved-values set-type-restriction! set-name! set-function-descr! expr offset <object> <unique-obj> set-gf-cache-3-k! type-check-required-type set-length! cons <closure> ftlc-bindings set-string-length! gf-cache-overflow <partial-continuation> enclosing set-gf-cache-V-k! direct-slots gf-cache-V-v set-direct-slots! set-code-pointer! set-type-check-actual-value! class-category mp-rat-denominator setter-forms set-result-type! set-primop-has-side-effect?! lexical-enclosing <top-level-contour> string-set! class-hash gf-cache-0-v translations <condition> function-descr class-name set-value! forms <function> set-forms! case set-initialization-mode! <bvec> <function-place> gf-cache-1-k set-gf-cache-2-k! gf-cache-2-v set-linkage-info! table set-offset! set-argument-error-arguments! <<standard-class>> <octet-string> generic-function-methods set-gf-cache-2-v! gf-cache-3-v set-spare-0! set-function-place-code! set-output-port! set-arg-types! <substitution> set-gf-cache-overflow! <byte-coded> sync-method set-instance-size! set-back! system-call <spare-1> set-generic-function-name! linkage-info <macro> simple-condition-args do <complex> set-rewriter-args! name->bindings set-ftlc-inside-values! set-ftlc-saved-values! set-limb-size! display-object <sequence> <list> set-corresponding-primtype! function-place-code set-argument-error-function-name! string-ref set-name->bindings! argument-required-type template set-ftlc-bindings! spare-0 <rect-complex> <generic-function> init-value <spare-2> cond limb-size <spare-3> environment set-index! <local-rewriter> slot-descriptor set-translations! or <bignum> <macro-form> output-port <type-check-failed> init-keyword %make and define-macro <binding-envt> set-gf-cache-0-k! rewriter-lex-envt set-rest-type! state <fluid-tl-contour> set-gf-cache-1-k! limb-cap set-mp-data! set-front! string-length set-input-port! <binding> <top-level-var> set-backing! argument-error-function-name set-full-procedure-bdg! set-rewriter-lex-envt! <number> <method> set-setter! set-envt! <getter> set-superclasses! index type-restriction set-rewriter-body! <error> set-class-hash! set-class-precedence-list! setter <scope-record> <setter> define-safe-glue cons* rewriter-dyn-envt primop-has-side-effect? set-owner! set-mp-rat-numerator! else-bdg set-simple-condition-msg! set-argument-required-type! basis <unicode-string> set-sync-method! <argument-type-error> <ascii-char> <unicode-char> <fixnum> set-gf-cache-1-v! <<class>> rewriter-body rewriter-args set-arguments! <rational> gf-cache-0-k gf-cache-1-v <argument-error> miss-count let* set-gf-cache-V-v! set-expr! type-check-actual-value cdr set-miss-count! set-heap-type! write-prot full-procedure-bdg owner set-args! getter nlambda <vector> superclasses set-getter! arguments <type> <quantity> heap-type class-precedence-list envt ftlc-inside-values set-argument-error-bad-arg! set-simple-condition-args! <long-int> function-specializers bindings body set-dynamic-enclosing! gf-cache-V-k <collection> set-gf-cache-0-v! <gvec> front set-slot-descriptor! <simple-error> car <double-float> generic-function-name image-mode initialization-mode set-init-value! set-system-call! initialize mp-rat-numerator set-lexical-enclosing! set-environment! to-string re set-mp-rat-denominator! value set-template! set-class-category! <slot-descriptor> set-body! simple-condition-msg <slot-method> hash-code <string> <char> set-properties! <empty-list> set-generic-function-methods! set-init-keyword! <lexical-contour> backing gf-cache-2-k set-image-mode! argument-error-arguments) (("modules/corelib/macros.scm" syntax cond ()) ("modules/corelib/macros.scm" syntax or ()) ("modules/corelib/macros.scm" syntax cons* ()) ("modules/corelib/macros.scm" syntax and ()) ("modules/corelib/macros.scm" syntax case ()) ("modules/corelib/classes.scm" class <object> ()) ("modules/corelib/classes.scm" class <collection> ()) ("modules/corelib/classes.scm" class <sequence> ()) ("modules/corelib/classes.scm" class <vector> ()) ("modules/corelib/classes.scm" class <list> ()) ("modules/corelib/classes.scm" class <pair> ()) ("modules/corelib/classes.scm" class <empty-list> ()) ("modules/corelib/classes.scm" class <abstract-string> ()) ("modules/corelib/classes.scm" class <octet-string> ()) ("modules/corelib/classes.scm" class <string> ()) ("modules/corelib/classes.scm" class <unicode-string> ()) ("modules/corelib/classes.scm" class <char> ()) ("modules/corelib/classes.scm" class <ascii-char> ()) ("modules/corelib/classes.scm" class <unicode-char> ()) ("modules/corelib/classes.scm" class <quantity> ()) ("modules/corelib/classes.scm" class <number> ()) ("modules/corelib/classes.scm" class <complex> ()) ("modules/corelib/classes.scm" class <rect-complex> ()) ("modules/corelib/classes.scm" class <real> ()) ("modules/corelib/classes.scm" class <float> ()) ("modules/corelib/classes.scm" class <rational> ()) ("modules/corelib/classes.scm" class <mp-rational> ()) ("modules/corelib/classes.scm" class <integer> ()) ("modules/corelib/classes.scm" class <bignum> ()) ("modules/corelib/classes.scm" class <mp-data> ()) ("modules/corelib/classes.scm" class <fixnum> ()) ("modules/corelib/classes.scm" class <double-float> ()) ("modules/corelib/classes.scm" class <long-int> ()) ("modules/corelib/classes.scm" class <boolean> ()) ("modules/corelib/classes.scm" class <unique-obj> ()) ("modules/corelib/classes.scm" class <spare-1> ()) ("modules/corelib/classes.scm" class <spare-2> ()) ("modules/corelib/classes.scm" class <spare-3> ()) ("modules/corelib/classes.scm" class <byte-vector> ()) ("modules/corelib/classes.scm" class <byte-coded> ()) ("modules/corelib/classes.scm" class <symbol> ()) ("modules/corelib/classes.scm" class <binding-envt> ()) ("modules/corelib/classes.scm" class <function> ()) ("modules/corelib/classes.scm" class <closure> ()) ("modules/corelib/classes.scm" class <method> ()) ("modules/corelib/classes.scm" class <generic-function> ()) ("modules/corelib/classes.scm" class <single-dispatch-gf> ()) ("modules/corelib/classes.scm" class <type> ()) ("modules/corelib/classes.scm" class <<class>> ()) ("modules/corelib/classes.scm" class <<standard-class>> ()) ("modules/corelib/classes.scm" class <slot-descriptor> ()) ("modules/corelib/classes.scm" class <template> ()) ("modules/corelib/classes.scm" class <partial-continuation> ()) ("modules/corelib/classes.scm" class <binding> ()) ("modules/corelib/classes.scm" class <top-level-var> ()) ("modules/corelib/classes.scm" class <substitution> ()) ("modules/corelib/classes.scm" class <macro> ()) ("modules/corelib/classes.scm" class <rewriter> ()) ("modules/corelib/classes.scm" class <local-rewriter> ()) ("modules/corelib/classes.scm" class <primop> ()) ("modules/corelib/classes.scm" class <scope-record> ()) ("modules/corelib/classes.scm" class <lexical-contour> ()) ("modules/corelib/classes.scm" class <top-level-contour> ()) ("modules/corelib/classes.scm" class <macro-form> ()) ("modules/corelib/classes.scm" class <gvec> ()) ("modules/corelib/classes.scm" class <bvec> ()) ("modules/corelib/classes.scm" class <dequeue> ()) ("modules/corelib/classes.scm" class <winding-contour> ()) ("modules/corelib/classes.scm" class <slot-method> ()) ("modules/corelib/classes.scm" class <getter> ()) ("modules/corelib/classes.scm" class <setter> ()) ("modules/corelib/classes.scm" class <fluid-tl-contour> ()) ("modules/corelib/classes.scm" class <place> ()) ("modules/corelib/classes.scm" class <function-place> ()) ("modules/corelib/classes.scm" class <condition> ()) ("modules/corelib/classes.scm" class <simple-warning> ()) ("modules/corelib/classes.scm" class <serious-condition> ()) ("modules/corelib/classes.scm" class <error> ()) ("modules/corelib/classes.scm" class <os-error> ()) ("modules/corelib/classes.scm" class <simple-error> ()) ("modules/corelib/classes.scm" class <type-check-failed> ()) ("modules/corelib/classes.scm" class <argument-error> ()) ("modules/corelib/classes.scm" class <argument-type-error> ()) ("modules/corelib/classes.scm" class <substring> ())))